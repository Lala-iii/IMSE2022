{"ast":null,"code":"var _jsxFileName = \"/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transaction, setTransaction] = useState({});\n  const [changedExpenseType, setChangedExpenseType] = useState();\n  const [data, setData] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [expenseType, setExpenseType] = useState([]);\n  const [transactionType, setTransactionType] = useState([]);\n  const [edit_id, setEditID] = useState(\"\");\n  const [eType, setEType] = useState();\n\n  const fetch = () => {\n    axios.get(`http://localhost:8000/transaction/`).then(result => setData(result.data)).catch(error => console.log(\"Error\", error));\n  };\n\n  useEffect(() => {\n    fetch();\n    axios.get(`http://localhost:8000/expense-type/`).then(result => setExpenseType(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/transaction-type/`).then(result => setTransactionType(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/customer/`).then(result => setCustomer(result.data)).catch(error => console.log(\"Error\", error));\n  }, []);\n\n  const put_transaction = () => {\n    transaction.expense_type = changedExpenseType;\n    console.log(transaction);\n    axios.put(`http://localhost:8000/transaction/${transaction.id}/`, transaction).then(result => console.log(\"Logging\", result)).catch(error => console.log(\"Error\", error));\n    fetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex items-center justify-center min-h-screen bg-indigo-300\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-span-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"overflow-auto lg:overflow-visible \",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"table text-gray-800 border-separate space-y-6 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              class: \"bg-indigo-200 text-gray-900\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"p-3 text-left\",\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"p-3 text-left\",\n                  children: \"Transaction Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"p-3 text-left\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"p-3 text-left\",\n                  children: \"Expense Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"p-3 text-left\",\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data === null || data === void 0 ? void 0 : data.map(item => {\n                const cust = customer === null || customer === void 0 ? void 0 : customer.find(c => c.id === item.receiver_account);\n                const ttype = transactionType === null || transactionType === void 0 ? void 0 : transactionType.find(t => t.id === item.transaction_type);\n                setEType(expenseType === null || expenseType === void 0 ? void 0 : expenseType.find(e => e.id === item.expense_type));\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  class: \"bg-indigo-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    class: \"p-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"flex align-items-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"ml-3\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"\",\n                          children: cust ? /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [cust.firstname, \" \", cust.lastname]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 80,\n                            columnNumber: 33\n                          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: \"no Data\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 78,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"text-gray-500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"text-gray-500\",\n                          children: item.payment_reference\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 88,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this), ttype ? /*#__PURE__*/_jsxDEV(\"td\", {\n                    class: \"p-3\",\n                    children: ttype.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"no Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    class: \"p-3 font-bold\",\n                    children: [item.amount, \" \\u20AC\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    class: \"p-3\",\n                    children: eType ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.id === edit_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\",\n                          required: true,\n                          name: \"expensetype\",\n                          id: \"expensetype\",\n                          value: eType.id,\n                          onChange: e => {\n                            setChangedExpenseType(e.target.value);\n                            setTransaction(item);\n                            setEType(e.target.value);\n                          },\n                          children: expenseType === null || expenseType === void 0 ? void 0 : expenseType.map(element => {\n                            return /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: element.id,\n                              children: element.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 120,\n                              columnNumber: 39\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"bg-green-400 text-gray-50 rounded-md px-2\",\n                        children: eType.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"bg-green-400 text-gray-50 rounded-md px-2\",\n                      children: \"no Data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    class: \"p-3 \",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"#\",\n                      class: \"text-gray-500 hover:text-gray-100  mx-2\",\n                      children: item.id === edit_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        class: \"material-icons-outlined text-base\",\n                        onClick: () => {\n                          put_transaction();\n                          setEditID(0);\n                        },\n                        children: \"Save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                        class: \"material-icons-outlined text-base\",\n                        onClick: () => setEditID(item.id),\n                        children: \"edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"NjRcn+iQNOUV4tjyk7Fax+w03FE=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionsList.jsx"],"names":["React","useState","useEffect","axios","TransactionsList","transaction","setTransaction","changedExpenseType","setChangedExpenseType","data","setData","customer","setCustomer","expenseType","setExpenseType","transactionType","setTransactionType","edit_id","setEditID","eType","setEType","fetch","get","then","result","catch","error","console","log","put_transaction","expense_type","put","id","map","item","cust","find","c","receiver_account","ttype","t","transaction_type","e","firstname","lastname","payment_reference","description","amount","target","value","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction TransactionsList() {\n  const [transaction, setTransaction] = useState({});\n  const [changedExpenseType, setChangedExpenseType] = useState();\n  const [data, setData] = useState([]);\n  const [customer, setCustomer] = useState([]);\n  const [expenseType, setExpenseType] = useState([]);\n  const [transactionType, setTransactionType] = useState([]);\n  const [edit_id, setEditID] = useState(\"\");\n  const [eType, setEType] = useState();\n  const fetch = () => {\n    axios\n      .get(`http://localhost:8000/transaction/`)\n      .then((result) => setData(result.data))\n      .catch((error) => console.log(\"Error\", error));\n  };\n  useEffect(() => {\n    fetch();\n    axios\n      .get(`http://localhost:8000/expense-type/`)\n      .then((result) => setExpenseType(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/transaction-type/`)\n      .then((result) => setTransactionType(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/customer/`)\n      .then((result) => setCustomer(result.data))\n      .catch((error) => console.log(\"Error\", error));\n  }, []);\n\n  const put_transaction = () => {\n    transaction.expense_type = changedExpenseType;\n    console.log(transaction);\n    axios\n      .put(`http://localhost:8000/transaction/${transaction.id}/`, transaction)\n      .then((result) => console.log(\"Logging\", result))\n      .catch((error) => console.log(\"Error\", error));\n    fetch();\n  };\n  return (\n    <div>\n      <div class=\"flex items-center justify-center min-h-screen bg-indigo-300\">\n        <div class=\"col-span-12\">\n          <div class=\"overflow-auto lg:overflow-visible \">\n            <table class=\"table text-gray-800 border-separate space-y-6 text-sm\">\n              <thead class=\"bg-indigo-200 text-gray-900\">\n                <tr>\n                  <th class=\"p-3 text-left\">To</th>\n                  <th class=\"p-3 text-left\">Transaction Type</th>\n                  <th class=\"p-3 text-left\">Amount</th>\n                  <th class=\"p-3 text-left\">Expense Category</th>\n                  <th class=\"p-3 text-left\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((item) => {\n                  const cust = customer?.find(\n                    (c) => c.id === item.receiver_account\n                  );\n                  const ttype = transactionType?.find(\n                    (t) => t.id === item.transaction_type\n                  );\n\n                  setEType(\n                    expenseType?.find((e) => e.id === item.expense_type)\n                  );\n                  return (\n                    <tr key={item.id} class=\"bg-indigo-200\">\n                      <td class=\"p-3\">\n                        <div class=\"flex align-items-center\">\n                          <div class=\"ml-3\">\n                            <div class=\"\">\n                              {cust ? (\n                                <div>\n                                  {cust.firstname} {cust.lastname}\n                                </div>\n                              ) : (\n                                <div>no Data</div>\n                              )}\n                            </div>\n                            <div class=\"text-gray-500\"></div>\n                            <div class=\"text-gray-500\">\n                              {item.payment_reference}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n\n                      {ttype ? (\n                        <td class=\"p-3\">{ttype.description}</td>\n                      ) : (\n                        <div>no Data</div>\n                      )}\n                      <td class=\"p-3 font-bold\">{item.amount} €</td>\n                      <td class=\"p-3\">\n                        {eType ? (\n                          <div>\n                            {item.id === edit_id ? (\n                              <div>\n                                <select\n                                  className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\n                                  required\n                                  name=\"expensetype\"\n                                  id=\"expensetype\"\n                                  value={eType.id}\n                                  onChange={(e) => {\n                                    setChangedExpenseType(e.target.value);\n                                    setTransaction(item);\n                                    setEType(e.target.value);\n                                  }}\n                                >\n                                  {expenseType?.map((element) => {\n                                    return (\n                                      <option value={element.id}>\n                                        {element.description}\n                                      </option>\n                                    );\n                                  })}\n                                </select>\n                              </div>\n                            ) : (\n                              <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\n                                {eType.description}\n                              </span>\n                            )}\n                          </div>\n                        ) : (\n                          <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\n                            no Data\n                          </span>\n                        )}\n                      </td>\n                      <td class=\"p-3 \">\n                        <a\n                          href=\"#\"\n                          class=\"text-gray-500 hover:text-gray-100  mx-2\"\n                        >\n                          {item.id === edit_id ? (\n                            <button\n                              class=\"material-icons-outlined text-base\"\n                              onClick={() => {\n                                put_transaction();\n                                setEditID(0);\n                              }}\n                            >\n                              Save\n                            </button>\n                          ) : (\n                            <button\n                              class=\"material-icons-outlined text-base\"\n                              onClick={() => setEditID(item.id)}\n                            >\n                              edit\n                            </button>\n                          )}\n                        </a>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}