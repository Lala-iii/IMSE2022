{"ast":null,"code":"var _jsxFileName = \"/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { iban } from \"../Dummy/Constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm() {\n  _s();\n\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [ref, setRef] = useState(\"\");\n  const [amount, setAmount] = useState(\"\"); //const [occurrenceDate, setOccurrenceDate] = useState(\"\");\n\n  const [eType, setEType] = useState(\"\");\n  const [customer, setCustomer] = useState({});\n  const [expenseTypes, setExpenseTypes] = useState([]);\n  const [transactionTypes, setTransactionTypes] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const classError = \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none bg-green-100\";\n  const classNoError = \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\";\n  error = False;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (from === \"\") error = True;\n    const transaction = {\n      date_of_occurrence: new Date().toLocaleDateString(),\n      sender: from,\n      receiver: to,\n      transaction_type: type,\n      payment_reference: ref,\n      expense_type: eType,\n      amount: amount\n    };\n    console.log(transaction);\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/expense-type/`).then(result => setExpenseTypes(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/transaction-type/`).then(result => setTransactionTypes(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/customer/1/`).then(result => setCustomer(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/account/`).then(result => setAccounts(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/customer/`).then(result => setCustomers(result.data)).catch(error => console.log(\"Error\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"h-screen bg-indigo-300 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"lg:w-2/5 md:w-1/2 w-2/3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"bg-indigo-200 p-10 rounded-lg shadow-lg min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"text-center text-2xl mb-3 text-gray-600 font-bold font-sans\",\n            children: \"Create a new transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"from\",\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: error ? classError : classNoError,\n              required: true,\n              value: from,\n              name: \"from\",\n              id: \"from\",\n              placeholder: \"from\",\n              onChange: e => setFrom(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Please select your account---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), accounts === null || accounts === void 0 ? void 0 : accounts.map(element => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: element.iban,\n                  children: [element.iban, \" - \", element.balance]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"to\",\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\",\n              required: true,\n              value: to,\n              name: \"to\",\n              id: \"to\",\n              placeholder: \"to\",\n              onChange: e => setTo(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Please select your contact---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), accounts === null || accounts === void 0 ? void 0 : accounts.map(element => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: element.iban,\n                  children: [element.iban, \" - \", element.balance]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"transaction_type\",\n              children: \"Transaction Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\",\n              required: true,\n              value: type,\n              name: \"transaction_type\",\n              id: \"transaction_type\",\n              placeholder: \"normal\",\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Please select a transaction type---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), transactionTypes === null || transactionTypes === void 0 ? void 0 : transactionTypes.map(element => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: element.id,\n                  children: element.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"expense_type\",\n              children: \"Expense Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\",\n              required: true,\n              value: eType,\n              name: \"expense_type\",\n              id: \"expense_type\",\n              placeholder: \"normal\",\n              onChange: e => setEType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Please select a expense type---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), expenseTypes === null || expenseTypes === void 0 ? void 0 : expenseTypes.map(element => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: element.id,\n                  children: element.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"transaction_reference\",\n              children: \"Transaction Reference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: ref,\n              onChange: e => {\n                setRef(e.target.value);\n              },\n              class: \"w-full bg-indigo-100 px-4 py-1 rounded-lg focus:outline-none\",\n              type: \"text\",\n              name: \"transaction_reference\",\n              id: \"transaction_reference\",\n              placeholder: \"Transaction Reference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"text-gray-800 font-semibold block mt-3 text-md\",\n              for: \"amount\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: amount,\n              onChange: e => {\n                setAmount(e.target.value);\n              },\n              class: \"w-full bg-indigo-100 px-4 py-2 rounded-lg focus:outline-none\",\n              type: \"text\",\n              name: \"amount\",\n              id: \"amount\",\n              placeholder: \"Amount in Euro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            class: \"w-full mt-4 bg-indigo-500 rounded-lg px-4 py-1 text-lg text-gray-100 tracking-wide font-semibold font-sans\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            class: \"w-full mt-4 bg-indigo-100 rounded-lg px-4 py-1 text-lg text-gray-800 tracking-wide font-semibold font-sans\",\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionForm, \"WTa2ZiwL9caZFTa9/U3RtqteWMA=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionForm.jsx"],"names":["React","useState","useEffect","iban","axios","TransactionForm","from","setFrom","to","setTo","type","setType","ref","setRef","amount","setAmount","eType","setEType","customer","setCustomer","expenseTypes","setExpenseTypes","transactionTypes","setTransactionTypes","customers","setCustomers","accounts","setAccounts","classError","classNoError","error","False","handleSubmit","e","preventDefault","True","transaction","date_of_occurrence","Date","toLocaleDateString","sender","receiver","transaction_type","payment_reference","expense_type","console","log","get","then","result","data","catch","target","value","map","element","balance","id","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { iban } from \"../Dummy/Constants\";\nimport axios from \"axios\";\n\nfunction TransactionForm() {\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [ref, setRef] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  //const [occurrenceDate, setOccurrenceDate] = useState(\"\");\n  const [eType, setEType] = useState(\"\");\n\n  const [customer, setCustomer] = useState({});\n  const [expenseTypes, setExpenseTypes] = useState([]);\n  const [transactionTypes, setTransactionTypes] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n\n  const classError =\n    \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none bg-green-100\";\n  const classNoError =\n    \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\";\n  error = False;\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (from === \"\") error = True;\n    const transaction = {\n      date_of_occurrence: new Date().toLocaleDateString(),\n      sender: from,\n      receiver: to,\n      transaction_type: type,\n      payment_reference: ref,\n      expense_type: eType,\n      amount: amount,\n    };\n    console.log(transaction);\n  };\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/expense-type/`)\n      .then((result) => setExpenseTypes(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/transaction-type/`)\n      .then((result) => setTransactionTypes(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/customer/1/`)\n      .then((result) => setCustomer(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/account/`)\n      .then((result) => setAccounts(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/customer/`)\n      .then((result) => setCustomers(result.data))\n      .catch((error) => console.log(\"Error\", error));\n  }, []);\n\n  return (\n    <div>\n      <div class=\"h-screen bg-indigo-300 flex justify-center items-center\">\n        <div class=\"lg:w-2/5 md:w-1/2 w-2/3\">\n          <form class=\"bg-indigo-200 p-10 rounded-lg shadow-lg min-w-full\">\n            <h1 class=\"text-center text-2xl mb-3 text-gray-600 font-bold font-sans\">\n              Create a new transaction\n            </h1>\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"from\"\n              >\n                From\n              </label>\n              <select\n                className={error ? classError : classNoError}\n                required\n                value={from}\n                name=\"from\"\n                id=\"from\"\n                placeholder=\"from\"\n                onChange={(e) => setFrom(e.target.value)}\n              >\n                <option value=\"\">---Please select your account---</option>\n                {accounts?.map((element) => {\n                  return (\n                    <option value={element.iban}>\n                      {element.iban} - {element.balance}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"to\"\n              >\n                To\n              </label>\n              <select\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\n                required\n                value={to}\n                name=\"to\"\n                id=\"to\"\n                placeholder=\"to\"\n                onChange={(e) => setTo(e.target.value)}\n              >\n                <option value=\"\">---Please select your contact---</option>\n                {accounts?.map((element) => {\n                  return (\n                    <option value={element.iban}>\n                      {element.iban} - {element.balance}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"transaction_type\"\n              >\n                Transaction Type\n              </label>\n              <select\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\n                required\n                value={type}\n                name=\"transaction_type\"\n                id=\"transaction_type\"\n                placeholder=\"normal\"\n                onChange={(e) => setType(e.target.value)}\n              >\n                <option value=\"\">---Please select a transaction type---</option>\n                {transactionTypes?.map((element) => {\n                  return (\n                    <option value={element.id}>{element.description}</option>\n                  );\n                })}\n              </select>\n            </div>\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"expense_type\"\n              >\n                Expense Type\n              </label>\n              <select\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\n                required\n                value={eType}\n                name=\"expense_type\"\n                id=\"expense_type\"\n                placeholder=\"normal\"\n                onChange={(e) => setEType(e.target.value)}\n              >\n                <option value=\"\">---Please select a expense type---</option>\n                {expenseTypes?.map((element) => {\n                  return (\n                    <option value={element.id}>{element.description}</option>\n                  );\n                })}\n              </select>\n            </div>\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"transaction_reference\"\n              >\n                Transaction Reference\n              </label>\n              <input\n                value={ref}\n                onChange={(e) => {\n                  setRef(e.target.value);\n                }}\n                class=\"w-full bg-indigo-100 px-4 py-1 rounded-lg focus:outline-none\"\n                type=\"text\"\n                name=\"transaction_reference\"\n                id=\"transaction_reference\"\n                placeholder=\"Transaction Reference\"\n              />\n            </div>\n\n            <div>\n              <label\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\n                for=\"amount\"\n              >\n                Amount\n              </label>\n              <input\n                value={amount}\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n                class=\"w-full bg-indigo-100 px-4 py-2 rounded-lg focus:outline-none\"\n                type=\"text\"\n                name=\"amount\"\n                id=\"amount\"\n                placeholder=\"Amount in Euro\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              onClick={(e) => handleSubmit(e)}\n              class=\"w-full mt-4 bg-indigo-500 rounded-lg px-4 py-1 text-lg text-gray-100 tracking-wide font-semibold font-sans\"\n            >\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              class=\"w-full mt-4 bg-indigo-100 rounded-lg px-4 py-1 text-lg text-gray-800 tracking-wide font-semibold font-sans\"\n            >\n              Clear\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}