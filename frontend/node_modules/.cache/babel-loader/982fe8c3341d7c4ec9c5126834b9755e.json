{"ast":null,"code":"var _jsxFileName = \"/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transaction, setTransaction] = useState({});\n  const [changedExpenseType, setChangedExpenseType] = useState();\n  const [transactions, setTransactions] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [expenseTypes, setExpenseTypes] = useState([]);\n  const [transactionTypes, setTransactionTypes] = useState([]);\n  const [edit_id, setEditID] = useState(\"\");\n  const [currentExpenseType, setCurrentExpenseType] = useState(\"\");\n\n  const fetch = () => {\n    axios.get(`http://localhost:8000/transaction/`).then(result => setTransactions(result.data)).catch(error => console.log(\"Error\", error));\n  };\n\n  useEffect(() => {\n    fetch();\n    axios.get(`http://localhost:8000/expense-type/`).then(result => setExpenseTypes(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/transaction-type/`).then(result => setTransactionTypes(result.data)).catch(error => console.log(\"Error\", error));\n    axios.get(`http://localhost:8000/customer/`).then(result => setCustomers(result.data)).catch(error => console.log(\"Error\", error));\n  }, []);\n\n  const put_transaction = () => {\n    transaction.expense_type = changedExpenseType;\n    console.log(transaction);\n    axios.put(`http://localhost:8000/transaction/${transaction.id}/`, transaction).then(result => fetch()).catch(error => console.log(\"Error\", error));\n    fetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"overflow-auto lg:overflow-visible flex items-center justify-center min-h-screen col-span-12 bg-indigo-300\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table text-gray-800 border-separate space-y-6 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        class: \"bg-indigo-200 text-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            class: \"p-3 text-left\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            class: \"p-3 text-left\",\n            children: \"Transaction Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            class: \"p-3 text-left\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            class: \"p-3 text-left\",\n            children: \"Expense Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            class: \"p-3 text-left\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions === null || transactions === void 0 ? void 0 : transactions.map(item => {\n          const cust = customers === null || customers === void 0 ? void 0 : customers.find(c => c.id === item.receiver_account);\n          const ttype = transactionTypes === null || transactionTypes === void 0 ? void 0 : transactionTypes.find(t => t.id === item.transaction_type);\n          const etype = expenseTypes === null || expenseTypes === void 0 ? void 0 : expenseTypes.find(e => e.id === item.expense_type);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            class: \"bg-indigo-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"flex align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"ml-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"\",\n                    children: cust ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [cust.firstname, \" \", cust.lastname]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"no Data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"text-gray-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"text-gray-500\",\n                    children: item.payment_reference\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), ttype ? /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3\",\n              children: ttype.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3\",\n              children: \"No data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3 font-bold\",\n              children: [item.amount, \" \\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3\",\n              children: etype ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.id === edit_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"bg-indigo-400 text-gray-50 rounded-md px-2\",\n                    required: true,\n                    name: \"expensetype\",\n                    id: \"expensetype\",\n                    value: currentExpenseType,\n                    onChange: e => {\n                      setChangedExpenseType(e.target.value);\n                      setTransaction(item);\n                      setCurrentExpenseType(e.target.value);\n                    },\n                    children: expenseTypes === null || expenseTypes === void 0 ? void 0 : expenseTypes.map(element => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: element.id,\n                        children: element.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 33\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"bg-green-400 text-gray-50 rounded-md px-2\",\n                  children: etype.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"bg-green-400 text-gray-50 rounded-md px-2\",\n                children: \"no Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              class: \"p-3 \",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                class: \"text-gray-500 hover:text-gray-100  mx-2\",\n                children: item.id === edit_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"material-icons-outlined text-base\",\n                  onClick: () => {\n                    put_transaction();\n                    setEditID(0);\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"material-icons-outlined text-base\",\n                  onClick: () => {\n                    setEditID(item.id);\n                    setCurrentExpenseType(item.expense_type);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"gxalU+JousySSm6Ep0ae3ExY6VY=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/Users/muhi/mycode/imse/testBank/frontend/src/Components/TransactionsList.jsx"],"names":["React","useState","useEffect","axios","TransactionsList","transaction","setTransaction","changedExpenseType","setChangedExpenseType","transactions","setTransactions","customers","setCustomers","expenseTypes","setExpenseTypes","transactionTypes","setTransactionTypes","edit_id","setEditID","currentExpenseType","setCurrentExpenseType","fetch","get","then","result","data","catch","error","console","log","put_transaction","expense_type","put","id","map","item","cust","find","c","receiver_account","ttype","t","transaction_type","etype","e","firstname","lastname","payment_reference","description","amount","target","value","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction TransactionsList() {\n  const [transaction, setTransaction] = useState({});\n  const [changedExpenseType, setChangedExpenseType] = useState();\n  const [transactions, setTransactions] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [expenseTypes, setExpenseTypes] = useState([]);\n  const [transactionTypes, setTransactionTypes] = useState([]);\n  const [edit_id, setEditID] = useState(\"\");\n  const [currentExpenseType, setCurrentExpenseType] = useState(\"\");\n\n  const fetch = () => {\n    axios\n      .get(`http://localhost:8000/transaction/`)\n      .then((result) => setTransactions(result.data))\n      .catch((error) => console.log(\"Error\", error));\n  };\n  useEffect(() => {\n    fetch();\n    axios\n      .get(`http://localhost:8000/expense-type/`)\n      .then((result) => setExpenseTypes(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/transaction-type/`)\n      .then((result) => setTransactionTypes(result.data))\n      .catch((error) => console.log(\"Error\", error));\n\n    axios\n      .get(`http://localhost:8000/customer/`)\n      .then((result) => setCustomers(result.data))\n      .catch((error) => console.log(\"Error\", error));\n  }, []);\n\n  const put_transaction = () => {\n    transaction.expense_type = changedExpenseType;\n    console.log(transaction);\n    axios\n      .put(`http://localhost:8000/transaction/${transaction.id}/`, transaction)\n      .then((result) => fetch())\n      .catch((error) => console.log(\"Error\", error));\n    fetch();\n  };\n  return (\n    <div class=\"overflow-auto lg:overflow-visible flex items-center justify-center min-h-screen col-span-12 bg-indigo-300\">\n      <table class=\"table text-gray-800 border-separate space-y-6 text-sm\">\n        <thead class=\"bg-indigo-200 text-gray-900\">\n          <tr>\n            <th class=\"p-3 text-left\">To</th>\n            <th class=\"p-3 text-left\">Transaction Type</th>\n            <th class=\"p-3 text-left\">Amount</th>\n            <th class=\"p-3 text-left\">Expense Category</th>\n            <th class=\"p-3 text-left\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions?.map((item) => {\n            const cust = customers?.find((c) => c.id === item.receiver_account);\n            const ttype = transactionTypes?.find(\n              (t) => t.id === item.transaction_type\n            );\n\n            const etype = expenseTypes?.find((e) => e.id === item.expense_type);\n            return (\n              <tr key={item.id} class=\"bg-indigo-200\">\n                <td class=\"p-3\">\n                  <div class=\"flex align-items-center\">\n                    <div class=\"ml-3\">\n                      <div class=\"\">\n                        {cust ? (\n                          <div>\n                            {cust.firstname} {cust.lastname}\n                          </div>\n                        ) : (\n                          <div>no Data</div>\n                        )}\n                      </div>\n                      <div class=\"text-gray-500\"></div>\n                      <div class=\"text-gray-500\">{item.payment_reference}</div>\n                    </div>\n                  </div>\n                </td>\n\n                {ttype ? (\n                  <td class=\"p-3\">{ttype.description}</td>\n                ) : (\n                  <td class=\"p-3\">No data</td>\n                )}\n                <td class=\"p-3 font-bold\">{item.amount} €</td>\n                <td class=\"p-3\">\n                  {etype ? (\n                    <div>\n                      {item.id === edit_id ? (\n                        <div>\n                          <select\n                            className=\"bg-indigo-400 text-gray-50 rounded-md px-2\"\n                            required\n                            name=\"expensetype\"\n                            id=\"expensetype\"\n                            value={currentExpenseType}\n                            onChange={(e) => {\n                              setChangedExpenseType(e.target.value);\n                              setTransaction(item);\n                              setCurrentExpenseType(e.target.value);\n                            }}\n                          >\n                            {expenseTypes?.map((element) => {\n                              return (\n                                <option value={element.id}>\n                                  {element.description}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </div>\n                      ) : (\n                        <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\n                          {etype.description}\n                        </span>\n                      )}\n                    </div>\n                  ) : (\n                    <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\n                      no Data\n                    </span>\n                  )}\n                </td>\n                <td class=\"p-3 \">\n                  <a href=\"#\" class=\"text-gray-500 hover:text-gray-100  mx-2\">\n                    {item.id === edit_id ? (\n                      <button\n                        class=\"material-icons-outlined text-base\"\n                        onClick={() => {\n                          put_transaction();\n                          setEditID(0);\n                        }}\n                      >\n                        Save\n                      </button>\n                    ) : (\n                      <button\n                        class=\"material-icons-outlined text-base\"\n                        onClick={() => {\n                          setEditID(item.id);\n                          setCurrentExpenseType(item.expense_type);\n                        }}\n                      >\n                        Edit\n                      </button>\n                    )}\n                  </a>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}