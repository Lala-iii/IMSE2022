[{"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\App.js":"3","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\Navbar.jsx":"4","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\LandingPage.jsx":"5","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\CreateAccount.jsx":"6","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\CreateTransaction.jsx":"7","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\ShowTransactions.jsx":"8","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\Settings.jsx":"9","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\Contacts.jsx":"10","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\CreateAccountFrom.jsx":"11","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\TransactionsList.jsx":"12","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\TransactionForm.jsx":"13","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\ContactList.jsx":"14","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Dummy\\Constants.js":"15"},{"size":517,"mtime":1641827117668,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1641827117672,"results":"18","hashOfConfig":"17"},{"size":1095,"mtime":1641827117641,"results":"19","hashOfConfig":"17"},{"size":5737,"mtime":1641851695979,"results":"20","hashOfConfig":"17"},{"size":223,"mtime":1641827117662,"results":"21","hashOfConfig":"17"},{"size":230,"mtime":1641827117659,"results":"22","hashOfConfig":"17"},{"size":232,"mtime":1641827117660,"results":"23","hashOfConfig":"17"},{"size":233,"mtime":1641827117665,"results":"24","hashOfConfig":"17"},{"size":150,"mtime":1641827117663,"results":"25","hashOfConfig":"17"},{"size":202,"mtime":1641827117658,"results":"26","hashOfConfig":"17"},{"size":2969,"mtime":1641848712952,"results":"27","hashOfConfig":"17"},{"size":6365,"mtime":1641827117652,"results":"28","hashOfConfig":"17"},{"size":8213,"mtime":1641827117650,"results":"29","hashOfConfig":"17"},{"size":2512,"mtime":1641827117645,"results":"30","hashOfConfig":"17"},{"size":2481,"mtime":1641827117655,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"vswbjt",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\index.js",[],["67","68"],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\App.js",["69"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport LandingPage from \"./Pages/LandingPage\";\r\nimport CreateAccount from \"./Pages/CreateAccount\";\r\nimport CreateTransaction from \"./Pages/CreateTransaction\";\r\nimport ShowTransactions from \"./Pages/ShowTransactions\";\r\nimport Settings from \"./Pages/Settings\";\r\nimport Contacts from \"./Pages/Contacts\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<LandingPage />} />\r\n        <Route exact path=\"/createAccount\" element={<CreateAccount />} />\r\n        <Route\r\n          exact\r\n          path=\"/createTransaction\"\r\n          element={<CreateTransaction />}\r\n        />\r\n\r\n        <Route exact path=\"/Contacts\" element={<Contacts />} />\r\n        <Route exact path=\"/showTransactions\" element={<ShowTransactions />} />\r\n        <Route exact path=\"/settings\" element={<Settings />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\Navbar.jsx",["70"],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\LandingPage.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\CreateAccount.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\CreateTransaction.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\ShowTransactions.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\Settings.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Pages\\Contacts.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\CreateAccountFrom.jsx",[],"C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\TransactionsList.jsx",["71"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction TransactionsList() {\r\n  const [transaction, setTransaction] = useState({});\r\n  const [changedExpenseType, setChangedExpenseType] = useState();\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [expenseTypes, setExpenseTypes] = useState([]);\r\n  const [transactionTypes, setTransactionTypes] = useState([]);\r\n  const [edit_id, setEditID] = useState(\"\");\r\n  const [currentExpenseType, setCurrentExpenseType] = useState(\"\");\r\n\r\n  const fetch = () => {\r\n    axios\r\n      .get(`http://localhost:8000/transaction/`)\r\n      .then((result) => setTransactions(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n  };\r\n  useEffect(() => {\r\n    fetch();\r\n    axios\r\n      .get(`http://localhost:8000/expense-type/`)\r\n      .then((result) => setExpenseTypes(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/transaction-type/`)\r\n      .then((result) => setTransactionTypes(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/customer/`)\r\n      .then((result) => setCustomers(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n  }, []);\r\n\r\n  const put_transaction = () => {\r\n    transaction.expense_type = changedExpenseType;\r\n    console.log(transaction);\r\n    axios\r\n      .put(`http://localhost:8000/transaction/${transaction.id}/`, transaction)\r\n      .then((result) => fetch())\r\n      .catch((error) => console.log(\"Error\", error));\r\n    fetch();\r\n  };\r\n  return (\r\n    <div class=\"overflow-auto lg:overflow-visible flex items-center justify-center min-h-screen col-span-12 bg-indigo-300\">\r\n      <table class=\"table text-gray-800 border-separate space-y-6 text-sm\">\r\n        <thead class=\"bg-indigo-200 text-gray-900\">\r\n          <tr>\r\n            <th class=\"p-3 text-left\">To</th>\r\n            <th class=\"p-3 text-left\">Transaction Type</th>\r\n            <th class=\"p-3 text-left\">Amount</th>\r\n            <th class=\"p-3 text-left\">Expense Category</th>\r\n            <th class=\"p-3 text-left\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions?.map((item) => {\r\n            const cust = customers?.find((c) => c.id === item.receiver_account);\r\n            const ttype = transactionTypes?.find(\r\n              (t) => t.id === item.transaction_type\r\n            );\r\n\r\n            const etype = expenseTypes?.find((e) => e.id === item.expense_type);\r\n            return (\r\n              <tr key={item.id} class=\"bg-indigo-200\">\r\n                <td class=\"p-3\">\r\n                  <div class=\"flex align-items-center\">\r\n                    <div class=\"ml-3\">\r\n                      <div class=\"\">\r\n                        {cust ? (\r\n                          <div>\r\n                            {cust.firstname} {cust.lastname}\r\n                          </div>\r\n                        ) : (\r\n                          <div>no Data</div>\r\n                        )}\r\n                      </div>\r\n                      <div class=\"text-gray-500\"></div>\r\n                      <div class=\"text-gray-500\">{item.payment_reference}</div>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n\r\n                {ttype ? (\r\n                  <td class=\"p-3\">{ttype.description}</td>\r\n                ) : (\r\n                  <td class=\"p-3\">No data</td>\r\n                )}\r\n                <td class=\"p-3 font-bold\">{item.amount} €</td>\r\n                <td class=\"p-3\">\r\n                  {etype ? (\r\n                    <div>\r\n                      {item.id === edit_id ? (\r\n                        <div>\r\n                          <select\r\n                            className=\"bg-indigo-600 text-gray-50 rounded-md px-2\"\r\n                            required\r\n                            name=\"expensetype\"\r\n                            id=\"expensetype\"\r\n                            value={currentExpenseType}\r\n                            onChange={(e) => {\r\n                              setChangedExpenseType(e.target.value);\r\n                              setTransaction(item);\r\n                              setCurrentExpenseType(e.target.value);\r\n                            }}\r\n                          >\r\n                            {expenseTypes?.map((element) => {\r\n                              return (\r\n                                <option value={element.id}>\r\n                                  {element.description}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </select>\r\n                        </div>\r\n                      ) : (\r\n                        <span class=\"bg-indigo-600 text-gray-50 rounded-md px-2\">\r\n                          {etype.description}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\r\n                      no Data\r\n                    </span>\r\n                  )}\r\n                </td>\r\n                <td class=\"p-3 \">\r\n                  <a href=\"#\" class=\"text-gray-500 hover:text-gray-100  mx-2\">\r\n                    {item.id === edit_id ? (\r\n                      <button\r\n                        class=\"material-icons-outlined text-base\"\r\n                        onClick={() => {\r\n                          put_transaction();\r\n                          setEditID(0);\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        class=\"material-icons-outlined text-base\"\r\n                        onClick={() => {\r\n                          setEditID(item.id);\r\n                          setCurrentExpenseType(item.expense_type);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionsList;\r\n","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\TransactionForm.jsx",["72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport { iban } from \"../Dummy/Constants\";\r\nimport axios from \"axios\";\r\n\r\nfunction TransactionForm() {\r\n  const [from, setFrom] = useState(\"none\");\r\n  const [to, setTo] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [ref, setRef] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  //const [occurrenceDate, setOccurrenceDate] = useState(\"\");\r\n  const [eType, setEType] = useState(\"\");\r\n\r\n  const [customer, setCustomer] = useState({});\r\n  const [expenseTypes, setExpenseTypes] = useState([]);\r\n  const [transactionTypes, setTransactionTypes] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n\r\n  const classError =\r\n    \"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\";\r\n  const classNoError =\r\n    \"w-full bg-green-100 px-4 py-2 h-8 rounded-lg focus:outline-none\";\r\n  let error = false;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (from === \"none\") error = true;\r\n    else error = false;\r\n    const transaction = {\r\n      date_of_occurrence: new Date().toLocaleDateString(),\r\n      sender: from,\r\n      receiver: to,\r\n      transaction_type: type,\r\n      payment_reference: ref,\r\n      expense_type: eType,\r\n      amount: amount,\r\n    };\r\n    console.log(transaction);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/expense-type/`)\r\n      .then((result) => setExpenseTypes(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/transaction-type/`)\r\n      .then((result) => setTransactionTypes(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/customer/1/`)\r\n      .then((result) => setCustomer(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/account/`)\r\n      .then((result) => setAccounts(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n\r\n    axios\r\n      .get(`http://localhost:8000/customer/`)\r\n      .then((result) => setCustomers(result.data))\r\n      .catch((error) => console.log(\"Error\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"h-screen bg-indigo-300 flex justify-center items-center\">\r\n        <div class=\"lg:w-2/5 md:w-1/2 w-2/3\">\r\n          <form class=\"bg-indigo-200 p-10 rounded-lg shadow-lg min-w-full\">\r\n            <h1 class=\"text-center text-2xl mb-3 text-gray-600 font-bold font-sans\">\r\n              Create a new transaction\r\n            </h1>\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"from\"\r\n              >\r\n                From\r\n              </label>\r\n              <select\r\n                className={error ? classError : classNoError}\r\n                required\r\n                value={from}\r\n                name=\"from\"\r\n                id=\"from\"\r\n                placeholder=\"from\"\r\n                onChange={(e) => setFrom(e.target.value)}\r\n              >\r\n                <option value=\"none\">---Please select your account---</option>\r\n                {accounts?.map((element) => {\r\n                  return (\r\n                    <option value={element.iban}>\r\n                      {element.iban} - {element.balance}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"to\"\r\n              >\r\n                To\r\n              </label>\r\n              <select\r\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\r\n                required\r\n                value={to}\r\n                name=\"to\"\r\n                id=\"to\"\r\n                placeholder=\"to\"\r\n                onChange={(e) => setTo(e.target.value)}\r\n              >\r\n                <option value=\"\">---Please select your contact---</option>\r\n                {accounts?.map((element) => {\r\n                  return (\r\n                    <option value={element.iban}>\r\n                      {element.iban} - {element.balance}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"transaction_type\"\r\n              >\r\n                Transaction Type\r\n              </label>\r\n              <select\r\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\r\n                required\r\n                value={type}\r\n                name=\"transaction_type\"\r\n                id=\"transaction_type\"\r\n                placeholder=\"normal\"\r\n                onChange={(e) => setType(e.target.value)}\r\n              >\r\n                <option value=\"\">---Please select a transaction type---</option>\r\n                {transactionTypes?.map((element) => {\r\n                  return (\r\n                    <option value={element.id}>{element.description}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"expense_type\"\r\n              >\r\n                Expense Type\r\n              </label>\r\n              <select\r\n                className=\"w-full bg-indigo-100 px-4 py-2 h-8 rounded-lg focus:outline-none\"\r\n                required\r\n                value={eType}\r\n                name=\"expense_type\"\r\n                id=\"expense_type\"\r\n                placeholder=\"normal\"\r\n                onChange={(e) => setEType(e.target.value)}\r\n              >\r\n                <option value=\"\">---Please select a expense type---</option>\r\n                {expenseTypes?.map((element) => {\r\n                  return (\r\n                    <option value={element.id}>{element.description}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"transaction_reference\"\r\n              >\r\n                Transaction Reference\r\n              </label>\r\n              <input\r\n                value={ref}\r\n                onChange={(e) => {\r\n                  setRef(e.target.value);\r\n                }}\r\n                class=\"w-full bg-indigo-100 px-4 py-1 rounded-lg focus:outline-none\"\r\n                type=\"text\"\r\n                name=\"transaction_reference\"\r\n                id=\"transaction_reference\"\r\n                placeholder=\"Transaction Reference\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label\r\n                class=\"text-gray-800 font-semibold block mt-3 text-md\"\r\n                for=\"amount\"\r\n              >\r\n                Amount\r\n              </label>\r\n              <input\r\n                value={amount}\r\n                onChange={(e) => {\r\n                  setAmount(e.target.value);\r\n                }}\r\n                class=\"w-full bg-indigo-100 px-4 py-2 rounded-lg focus:outline-none\"\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                id=\"amount\"\r\n                placeholder=\"Amount in Euro\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={(e) => handleSubmit(e)}\r\n              class=\"w-full mt-4 bg-indigo-500 rounded-lg px-4 py-1 text-lg text-gray-100 tracking-wide font-semibold font-sans\"\r\n            >\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"w-full mt-4 bg-indigo-100 rounded-lg px-4 py-1 text-lg text-gray-800 tracking-wide font-semibold font-sans\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionForm;\r\n","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Components\\ContactList.jsx",["75","76","77"],"import React, { useState } from \"react\";\r\nimport { transactions } from \"../Dummy/Constants\";\r\n\r\nfunction ContactList() {\r\n  const [data, setData] = useState(transactions);\r\n  return (\r\n    <div>\r\n      <div class=\"flex items-center justify-center min-h-screen bg-indigo-300\">\r\n        <div class=\"col-span-12\">\r\n          <div class=\"overflow-auto lg:overflow-visible \">\r\n            <table class=\"table text-gray-800 border-separate space-y-6 text-sm\">\r\n              <thead class=\"bg-indigo-200 text-gray-900\">\r\n                <tr>\r\n                  <th class=\"p-3 text-left\">Contact</th>\r\n                  <th class=\"p-3 text-left\">Category</th>\r\n                  <th class=\"p-3 text-left\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((item) => {\r\n                  return (\r\n                    <tr class=\"bg-indigo-200\">\r\n                      <td class=\"p-3\">\r\n                        <div class=\"flex align-items-center\">\r\n                          <div class=\"ml-3\">\r\n                            <div class=\"\">\r\n                              {item.receiver.firstname} {item.receiver.lastname}\r\n                            </div>\r\n                            <div class=\"text-gray-500\">\r\n                              {item.receiver.iban}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td class=\"p-3\">\r\n                        <span class=\"bg-green-400 text-gray-50 rounded-md px-2\">\r\n                          {item.category}\r\n                        </span>\r\n                      </td>\r\n                      <td class=\"p-3 \">\r\n                        <a\r\n                          href=\"#\"\r\n                          class=\"text-gray-500 hover:text-gray-100  mx-2\"\r\n                        >\r\n                          <i class=\"material-icons-outlined text-base\">edit</i>\r\n                        </a>\r\n                        <a\r\n                          href=\"#\"\r\n                          class=\"text-gray-500 hover:text-gray-100  ml-2\"\r\n                        >\r\n                          <i class=\"material-icons-round text-base\">delete</i>\r\n                        </a>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","C:\\Users\\User\\Desktop\\uni\\IMSE2022PROJECT\\IMSE2022\\frontend\\src\\Dummy\\Constants.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":18,"column":11,"nodeType":"88","endLine":18,"endColumn":27},{"ruleId":"86","severity":1,"message":"89","line":132,"column":19,"nodeType":"88","endLine":132,"endColumn":79},{"ruleId":"82","severity":1,"message":"90","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"91","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},{"ruleId":"82","severity":1,"message":"92","line":17,"column":10,"nodeType":"84","messageId":"85","endLine":17,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":5,"column":16,"nodeType":"84","messageId":"85","endLine":5,"endColumn":23},{"ruleId":"86","severity":1,"message":"89","line":41,"column":25,"nodeType":"88","endLine":44,"endColumn":26},{"ruleId":"86","severity":1,"message":"89","line":47,"column":25,"nodeType":"88","endLine":50,"endColumn":26},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'iban' is defined but never used.","'customer' is assigned a value but never used.","'customers' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]